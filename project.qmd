---
title: DANL Project
subtitle: "Data-Driven Mastery: Unlocking Business Potential"
author: 
  - Ethan
  - Dylan
  - Cara
  - Ryan
  - Rachel

toc: true
toc-title: "Table of Contents"
toc-depth: 2
number-sections: true

fig-width: 9

execute:
  code-tools: true
  message: false
  warning: false

from: markdown+emoji
---
```{r setup}
#| include: false
library(tidyverse)
library(skimr)
library(ggthemes)
library(hrbrthemes)

theme_set(theme_ipsum()+
          theme(strip.background =element_rect(fill="lightgray"),
                axis.title.x = 
                  element_text(angle = 0,
                               size = rel(1.33),
                               margin = margin(10,0,0,0)),
                axis.title.y = 
                  element_text(angle = 0,
                               size = rel(1.33),
                               margin = margin(0,10,0,0))
                )
          )
```



## Introduction

About this project :clap:


# Data

```{r}
data("mtcars")
```

The data was extracted from the 1974 Motor Trend US magazine, and comprises fuel consumption and 10 aspects of automobile design and performance for 32 automobiles (1973â€“74 models).

## Summary Statistics

```{r}
#| results: asis
#| echo: false
rmarkdown::paged_table(mtcars)
```

### Summary Statistics

```{r}
skim(mtcars) %>% 
  select(-n_missing)
```


# Visualization #1

```{r}
car_models <- rownames(mtcars)

ggplot(mtcars, aes(x = reorder(car_models, -qsec), y = qsec)) +
  geom_point(color = "blue") +
  labs(title = "1/4 Mile Times by Car Name",
       x = "Car Name",
       y = "1/4 Mile Time") +
  theme(axis.text.x = element_text(angle = 45, hjust = 1))


```
## Explanation

The provided R code utilizes the "ggplot2" library to generate a visually informative scatter plot, exploring the relationship between the weight of cars, their 1/4 mile times, and the number of cylinders in their engines. Each point on the scatter plot represents an individual car, positioned based on its weight (on the x-axis) and 1/4 mile time (on the y-axis). The color of each point is coded to represent the specific number of cylinders in the car's engine, providing a visual categorization. The title of the plot is "Scatter Plot of Quarter Mile Time vs. Weight by Number of Cylinders," highlighting the primary focus of the visualization. The x-axis is labeled "Weight (1000 lbs)," representing the weight of the cars, and the y-axis is labeled "Quarter Mile Time," indicating the time it takes for a car to cover a quarter-mile distance. The legend, titled "Number of Cylinders," assists in interpreting the color associations. This scatter plot offers a comprehensive view of how the weight of cars, their 1/4 mile times, and the number of cylinders interrelate, providing valuable insights into the performance characteristics of different engine configurations. Adjustments can be made to the code to suit specific preferences or analysis requirements.


# Visualization #2
```{r} 
ggplot(mtcars, aes(x = factor(cyl), y = qsec, fill = factor(cyl))) +
  geom_boxplot(alpha = 0.7) +
  geom_point(position = position_jitter(width = 0.3), color = "black", size = 2) +
  labs(title = "1/4 Mile Time by Number of Cylinders",
       x = "Number of Cylinders",
       y = "1/4 Mile Time",
       fill = "Number of Cylinders") +
  scale_fill_discrete(name = "Number of Cylinders") +
  theme_minimal()

```
## Explanation 


# Visualization #3
```{r}
mtcars$cyl <- factor(mtcars$cyl)

ggplot(mtcars, aes(x = wt, y = qsec, color = cyl)) +
  geom_point() +
  labs(title = "Scatter Plot of Quarter Mile Time vs. Weight by Number of Cylinders", 
       x = "Weight (1000 lbs)",
       y = "Quarter Mile Time") +
  scale_color_discrete(name = "Number of Cylinders")

```

## Explanation



# Visualization #4
```{r}
library(ggplot2)

ggplot(mtcars, aes(x = hp, y = qsec, color = factor(vs))) +
  geom_point(size = 3) +
  labs(title = "Quarter Mile Time by Horsepower and Engine Type",
       x = "Horsepower",
       y = "Quarter Mile Time") +
  scale_color_discrete(name = "Engine Type", labels = c("V-shaped", "Straight")) +
  theme_minimal()

```

## Explanation





# Visualization #5
```{r}
ggplot(data = mtcars,
       ) +
  
